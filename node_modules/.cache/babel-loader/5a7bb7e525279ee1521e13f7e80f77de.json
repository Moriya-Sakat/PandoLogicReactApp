{"ast":null,"code":"import { createAsyncThunk, createSlice } from '@reduxjs/toolkit';\nimport { fetchData } from './chartAPI';\nconst initialState = {\n  value: [],\n  status: 'idle'\n};\nexport const fetchDataAsync = createAsyncThunk('chart/fetchData', async () => {\n  const response = await fetchData();\n  return response;\n});\nexport const chartSlice = createSlice({\n  name: 'chart',\n  initialState,\n  reducers: {\n    setData: (state, action) => [...state, action.payload]\n  },\n  extraReducers: builder => {\n    builder.addCase(fetchDataAsync.pending, state => {\n      state.status = 'loading';\n    }).addCase(fetchDataAsync.fulfilled, (state, action) => {\n      state.status = 'idle';\n      state.value = action.payload;\n    });\n  }\n});\nexport const {\n  setData\n} = chartSlice.actions;\nexport const selectData = state => state.chart.value;\nexport default chartSlice.reducer;","map":{"version":3,"names":["createAsyncThunk","createSlice","fetchData","initialState","value","status","fetchDataAsync","response","chartSlice","name","reducers","setData","state","action","payload","extraReducers","builder","addCase","pending","fulfilled","actions","selectData","chart","reducer"],"sources":["D:/projects/webplatform/PandoLogic/chart-jobs-views/src/features/Chart/chartSlice.js"],"sourcesContent":["import { createAsyncThunk, createSlice } from '@reduxjs/toolkit';\nimport { fetchData } from './chartAPI';\n\nconst initialState = {\n  value: [],\n  status: 'idle',\n};\n\nexport const fetchDataAsync = createAsyncThunk(\n  'chart/fetchData',\n  async () => {\n    const response = await fetchData();\n    return response;\n  }\n);\n\nexport const chartSlice = createSlice({\n  name: 'chart',\n  initialState,\n  reducers: {\n    setData: (state, action) => [...state, action.payload],\n  },\n\n  extraReducers: (builder) => {\n    builder\n      .addCase(fetchDataAsync.pending, (state) => {\n        state.status = 'loading';\n      })\n      .addCase(fetchDataAsync.fulfilled, (state, action) => {\n        state.status = 'idle';\n        state.value = action.payload;\n      });\n  },\n});\n\nexport const { setData } = chartSlice.actions;\n\nexport const selectData = (state) => state.chart.value;\n\nexport default chartSlice.reducer;\n"],"mappings":"AAAA,SAASA,gBAAT,EAA2BC,WAA3B,QAA8C,kBAA9C;AACA,SAASC,SAAT,QAA0B,YAA1B;AAEA,MAAMC,YAAY,GAAG;EACnBC,KAAK,EAAE,EADY;EAEnBC,MAAM,EAAE;AAFW,CAArB;AAKA,OAAO,MAAMC,cAAc,GAAGN,gBAAgB,CAC5C,iBAD4C,EAE5C,YAAY;EACV,MAAMO,QAAQ,GAAG,MAAML,SAAS,EAAhC;EACA,OAAOK,QAAP;AACD,CAL2C,CAAvC;AAQP,OAAO,MAAMC,UAAU,GAAGP,WAAW,CAAC;EACpCQ,IAAI,EAAE,OAD8B;EAEpCN,YAFoC;EAGpCO,QAAQ,EAAE;IACRC,OAAO,EAAE,CAACC,KAAD,EAAQC,MAAR,KAAmB,CAAC,GAAGD,KAAJ,EAAWC,MAAM,CAACC,OAAlB;EADpB,CAH0B;EAOpCC,aAAa,EAAGC,OAAD,IAAa;IAC1BA,OAAO,CACJC,OADH,CACWX,cAAc,CAACY,OAD1B,EACoCN,KAAD,IAAW;MAC1CA,KAAK,CAACP,MAAN,GAAe,SAAf;IACD,CAHH,EAIGY,OAJH,CAIWX,cAAc,CAACa,SAJ1B,EAIqC,CAACP,KAAD,EAAQC,MAAR,KAAmB;MACpDD,KAAK,CAACP,MAAN,GAAe,MAAf;MACAO,KAAK,CAACR,KAAN,GAAcS,MAAM,CAACC,OAArB;IACD,CAPH;EAQD;AAhBmC,CAAD,CAA9B;AAmBP,OAAO,MAAM;EAAEH;AAAF,IAAcH,UAAU,CAACY,OAA/B;AAEP,OAAO,MAAMC,UAAU,GAAIT,KAAD,IAAWA,KAAK,CAACU,KAAN,CAAYlB,KAA1C;AAEP,eAAeI,UAAU,CAACe,OAA1B"},"metadata":{},"sourceType":"module"}